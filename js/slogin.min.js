var SLogin = SLogin || {
    initialize: function () {
        var elements, block, identifiers;
        for (identifiers = ["slogin-buttons", "slogin-buttons-attach", "slogin-buttons-attach-component"], i = 0; i < identifiers.length; i++) null !== (block = document.getElementById(identifiers[i])) && (elements = block.getElementsByTagName("a"), SLogin.initializeButtons(elements))
    }, initializeButtons: function (elements) {
        for (var params = "resizable=yes,scrollbars=no,toolbar=no,menubar=no,location=no,directories=no,status=yes", id, onclick, i = 0; i < elements.length; i++) id = elements[i].getAttribute("id"), onclick = elements[i].getAttribute("onclick"), "uLogin" != id && null === onclick && (elements[i].onclick = function (e) {
            "window" == typeof PopUpWindow && PopUpWindow.close();
            localStorage.removeItem('sloginAuth');
            var el = this.getElementsByTagName("span"), size = SLogin.getPopUpSize(el[0].className),
                win_size = SLogin.WindowSize(), centerWidth = (win_size.width - size.width) / 2,
                centerHeight = (win_size.height - size.height) / 2,
                PopUpWindow = window.open(this.href, "LoginPopUp", "width=" + size.width + ",height=" + size.height + ",left=" + centerWidth + ",top=" + centerHeight + "," + params);
                let interval = setInterval(function (){
                    let url = localStorage.getItem('sloginAuth');
                    if (url) {
                        localStorage.removeItem('sloginAuth');
                        clearInterval(interval);
                        window.location = url;
                        PopUpWindow.close();
                    }
                }, 1000);
            return PopUpWindow.focus(), !1
        })
    }, WindowSize: function () {
        var myWidth = 0, myHeight = 0, size = {width: 0, height: 0};
        return "number" == typeof window.innerWidth ? (myWidth = window.innerWidth, myHeight = window.innerHeight) : document.documentElement && (document.documentElement.clientWidth || document.documentElement.clientHeight) ? (myWidth = document.documentElement.clientWidth, myHeight = document.documentElement.clientHeight) : document.body && (document.body.clientWidth || document.body.clientHeight) && (myWidth = document.body.clientWidth, myHeight = document.body.clientHeight), size.width = myWidth, size.height = myHeight, size
    }, getPopUpSize: function (el) {
        var size = {width: 0, height: 0};
        switch (el) {
            case"vkontakteslogin":
                size = {width: 900, height: 550};
                break;
            case"googleslogin":
                size = {width: 450, height: 450};
                break;
            case"facebookslogin":
                size = {width: 1200, height: 600};
                break;
            case"twitterslogin":
                size = {width: 450, height: 550};
                break;
            case"yandexslogin":
                size = {width: 900, height: 550};
                break;
            case"linkedinslogin":
                size = {width: 350, height: 550};
                break;
            case"odnoklassnikislogin":
                size = {width: 550, height: 250};
                break;
            case"mailslogin":
                size = {width: 450, height: 325};
                break;
            default:
                size = {width: 900, height: 550}
        }
        return size
    }, addListener: function (obj, type, listener) {
        return obj.addEventListener ? (obj.addEventListener(type, listener, !1), !0) : !!obj.attachEvent && (obj.attachEvent("on" + type, listener), !0)
    }, loadModuleAjax: function () {
        SLogin.getUrl("/index.php?option=com_slogin&task=load_module_ajax")
    }, printProviders: function (resp) {
        document.getElementById("mod_slogin").innerHTML = resp, SLogin.initialize()
    }, getXmlHttp: function () {
        try {
            return new ActiveXObject("Msxml2.XMLHTTP")
        } catch (e) {
            try {
                return new ActiveXObject("Microsoft.XMLHTTP")
            } catch (ee) {
            }
        }
        if ("undefined" != typeof XMLHttpRequest) return new XMLHttpRequest
    }, getUrl: function (url) {
        var xmlhttp = SLogin.getXmlHttp();
        xmlhttp.open("GET", url), xmlhttp.onreadystatechange = function () {
            if (4 == xmlhttp.readyState) {
                var resp = xmlhttp.responseText;
                SLogin.printProviders(resp)
            }
        }, xmlhttp.send(null)
    }, changeLocation: function (url) {
        window.location = url;
    }
};
SLogin.addListener(window, "load", (function () {
    SLogin.initialize()
}));

window.changeLocation = function (url) {
    window.location = url;
}